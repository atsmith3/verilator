//FIXME not for master: TODO items related to class support

What works:
* Simple static member variables (test_regress/t/t_class1.v)
* Base C generation for "extends".

Next steps:
* Member functions -- into V3Task then problems .
* Once member functions work plan on merging to master.

* class parameter: verilog.y needs to parse.  Modules-in-modules might be a problem.
* class constructors
* static properties
* this
* const int
* virtual function
* virtual class
* extern function

Once in master, file a bug on adding these that others can probably help:
* Enable V3Task function inlining
* Warn on unused class
* Warn on unused members
* Warn on unused methods
* Warn on "local" and "protected" violations
* Create test cases for each major set of class features.
  -- See github sv_tests as a starting point, though note these need work to be good self-checking
     tests tests

Tests:
* calling methods with implied "this"
* calling methods with explicit "this"
* static methods calling non-static methods (i.e. no "this")

----------
Imp TODO notes:

Should __Classes.c/h be closer to a tweak on how NodeModule's are emitted?
E.g. static variables should probably be in the NodeModule .cpp files, so put implementations
there too?

Methods need as arguments:
   Need "this" -- unless static
   Need to be able to get to global/statics, so presumably need a pointer back to vlSym's.

   Do statics get $display("%p")-ed?  Presumably.  Ick, means Vimp needed
   in all display call hierarchy
